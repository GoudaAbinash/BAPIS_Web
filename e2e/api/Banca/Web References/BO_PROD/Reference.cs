//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Banca.BO_PROD {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AgentEnqServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAndUpdateClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePolicyWithPayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOnlyReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenewalCloningServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClaimAndNCBOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchPinCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback isClaimOperationCompleted;
        
        private System.Threading.SendOrPostCallback InspectServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClientEnqOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetcheMandateDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Pos_MispMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback HealthRenewalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDuplicateClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHBZoneOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Banca.Properties.Settings.Default.Banca_BO_PROD_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AgentEnqServiceCompletedEventHandler AgentEnqServiceCompleted;
        
        /// <remarks/>
        public event CreatePolicyCompletedEventHandler CreatePolicyCompleted;
        
        /// <remarks/>
        public event CreateAndUpdateClientCompletedEventHandler CreateAndUpdateClientCompleted;
        
        /// <remarks/>
        public event CreatePolicyWithPayerCompletedEventHandler CreatePolicyWithPayerCompleted;
        
        /// <remarks/>
        public event CreateOnlyReceiptCompletedEventHandler CreateOnlyReceiptCompleted;
        
        /// <remarks/>
        public event RenewalCloningServiceCompletedEventHandler RenewalCloningServiceCompleted;
        
        /// <remarks/>
        public event ClaimAndNCBCompletedEventHandler ClaimAndNCBCompleted;
        
        /// <remarks/>
        public event FetchPinCodeCompletedEventHandler FetchPinCodeCompleted;
        
        /// <remarks/>
        public event isClaimCompletedEventHandler isClaimCompleted;
        
        /// <remarks/>
        public event InspectServiceCompletedEventHandler InspectServiceCompleted;
        
        /// <remarks/>
        public event ClientEnqCompletedEventHandler ClientEnqCompleted;
        
        /// <remarks/>
        public event FetcheMandateDetailsCompletedEventHandler FetcheMandateDetailsCompleted;
        
        /// <remarks/>
        public event Pos_MispMasterCompletedEventHandler Pos_MispMasterCompleted;
        
        /// <remarks/>
        public event HealthRenewalCompletedEventHandler HealthRenewalCompleted;
        
        /// <remarks/>
        public event CheckDuplicateClientCompletedEventHandler CheckDuplicateClientCompleted;
        
        /// <remarks/>
        public event GetHBZoneCompletedEventHandler GetHBZoneCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/AgentEnqService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AgentEnqService([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("AgentEnqService", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AgentEnqServiceAsync(string xml) {
            this.AgentEnqServiceAsync(xml, null);
        }
        
        /// <remarks/>
        public void AgentEnqServiceAsync(string xml, object userState) {
            if ((this.AgentEnqServiceOperationCompleted == null)) {
                this.AgentEnqServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgentEnqServiceOperationCompleted);
            }
            this.InvokeAsync("AgentEnqService", new object[] {
                        xml}, this.AgentEnqServiceOperationCompleted, userState);
        }
        
        private void OnAgentEnqServiceOperationCompleted(object arg) {
            if ((this.AgentEnqServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgentEnqServiceCompleted(this, new AgentEnqServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/CreatePolicy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreatePolicy([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Product, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string XML) {
            object[] results = this.Invoke("CreatePolicy", new object[] {
                        Product,
                        XML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePolicyAsync(string Product, string XML) {
            this.CreatePolicyAsync(Product, XML, null);
        }
        
        /// <remarks/>
        public void CreatePolicyAsync(string Product, string XML, object userState) {
            if ((this.CreatePolicyOperationCompleted == null)) {
                this.CreatePolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePolicyOperationCompleted);
            }
            this.InvokeAsync("CreatePolicy", new object[] {
                        Product,
                        XML}, this.CreatePolicyOperationCompleted, userState);
        }
        
        private void OnCreatePolicyOperationCompleted(object arg) {
            if ((this.CreatePolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePolicyCompleted(this, new CreatePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/CreateAndUpdateClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreateAndUpdateClient([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string XML) {
            object[] results = this.Invoke("CreateAndUpdateClient", new object[] {
                        XML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAndUpdateClientAsync(string XML) {
            this.CreateAndUpdateClientAsync(XML, null);
        }
        
        /// <remarks/>
        public void CreateAndUpdateClientAsync(string XML, object userState) {
            if ((this.CreateAndUpdateClientOperationCompleted == null)) {
                this.CreateAndUpdateClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAndUpdateClientOperationCompleted);
            }
            this.InvokeAsync("CreateAndUpdateClient", new object[] {
                        XML}, this.CreateAndUpdateClientOperationCompleted, userState);
        }
        
        private void OnCreateAndUpdateClientOperationCompleted(object arg) {
            if ((this.CreateAndUpdateClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAndUpdateClientCompleted(this, new CreateAndUpdateClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/CreatePolicyWithPayer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreatePolicyWithPayer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Product, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string XML, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PayerID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string multiReceipt) {
            object[] results = this.Invoke("CreatePolicyWithPayer", new object[] {
                        Product,
                        XML,
                        PayerID,
                        multiReceipt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePolicyWithPayerAsync(string Product, string XML, string PayerID, string multiReceipt) {
            this.CreatePolicyWithPayerAsync(Product, XML, PayerID, multiReceipt, null);
        }
        
        /// <remarks/>
        public void CreatePolicyWithPayerAsync(string Product, string XML, string PayerID, string multiReceipt, object userState) {
            if ((this.CreatePolicyWithPayerOperationCompleted == null)) {
                this.CreatePolicyWithPayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePolicyWithPayerOperationCompleted);
            }
            this.InvokeAsync("CreatePolicyWithPayer", new object[] {
                        Product,
                        XML,
                        PayerID,
                        multiReceipt}, this.CreatePolicyWithPayerOperationCompleted, userState);
        }
        
        private void OnCreatePolicyWithPayerOperationCompleted(object arg) {
            if ((this.CreatePolicyWithPayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePolicyWithPayerCompleted(this, new CreatePolicyWithPayerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/CreateOnlyReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreateOnlyReceipt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string XML) {
            object[] results = this.Invoke("CreateOnlyReceipt", new object[] {
                        XML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOnlyReceiptAsync(string XML) {
            this.CreateOnlyReceiptAsync(XML, null);
        }
        
        /// <remarks/>
        public void CreateOnlyReceiptAsync(string XML, object userState) {
            if ((this.CreateOnlyReceiptOperationCompleted == null)) {
                this.CreateOnlyReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOnlyReceiptOperationCompleted);
            }
            this.InvokeAsync("CreateOnlyReceipt", new object[] {
                        XML}, this.CreateOnlyReceiptOperationCompleted, userState);
        }
        
        private void OnCreateOnlyReceiptOperationCompleted(object arg) {
            if ((this.CreateOnlyReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOnlyReceiptCompleted(this, new CreateOnlyReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/RenewalCloningService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RenewalCloningService([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string XML) {
            object[] results = this.Invoke("RenewalCloningService", new object[] {
                        XML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RenewalCloningServiceAsync(string XML) {
            this.RenewalCloningServiceAsync(XML, null);
        }
        
        /// <remarks/>
        public void RenewalCloningServiceAsync(string XML, object userState) {
            if ((this.RenewalCloningServiceOperationCompleted == null)) {
                this.RenewalCloningServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenewalCloningServiceOperationCompleted);
            }
            this.InvokeAsync("RenewalCloningService", new object[] {
                        XML}, this.RenewalCloningServiceOperationCompleted, userState);
        }
        
        private void OnRenewalCloningServiceOperationCompleted(object arg) {
            if ((this.RenewalCloningServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenewalCloningServiceCompleted(this, new RenewalCloningServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/ClaimAndNCB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClaimAndNCB([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string POlicyNo) {
            object[] results = this.Invoke("ClaimAndNCB", new object[] {
                        POlicyNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClaimAndNCBAsync(string POlicyNo) {
            this.ClaimAndNCBAsync(POlicyNo, null);
        }
        
        /// <remarks/>
        public void ClaimAndNCBAsync(string POlicyNo, object userState) {
            if ((this.ClaimAndNCBOperationCompleted == null)) {
                this.ClaimAndNCBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClaimAndNCBOperationCompleted);
            }
            this.InvokeAsync("ClaimAndNCB", new object[] {
                        POlicyNo}, this.ClaimAndNCBOperationCompleted, userState);
        }
        
        private void OnClaimAndNCBOperationCompleted(object arg) {
            if ((this.ClaimAndNCBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClaimAndNCBCompleted(this, new ClaimAndNCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/FetchPinCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet FetchPinCode([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Pincode) {
            object[] results = this.Invoke("FetchPinCode", new object[] {
                        Pincode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FetchPinCodeAsync(string Pincode) {
            this.FetchPinCodeAsync(Pincode, null);
        }
        
        /// <remarks/>
        public void FetchPinCodeAsync(string Pincode, object userState) {
            if ((this.FetchPinCodeOperationCompleted == null)) {
                this.FetchPinCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchPinCodeOperationCompleted);
            }
            this.InvokeAsync("FetchPinCode", new object[] {
                        Pincode}, this.FetchPinCodeOperationCompleted, userState);
        }
        
        private void OnFetchPinCodeOperationCompleted(object arg) {
            if ((this.FetchPinCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchPinCodeCompleted(this, new FetchPinCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/isClaim", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet isClaim([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string policyno) {
            object[] results = this.Invoke("isClaim", new object[] {
                        policyno});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void isClaimAsync(string policyno) {
            this.isClaimAsync(policyno, null);
        }
        
        /// <remarks/>
        public void isClaimAsync(string policyno, object userState) {
            if ((this.isClaimOperationCompleted == null)) {
                this.isClaimOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisClaimOperationCompleted);
            }
            this.InvokeAsync("isClaim", new object[] {
                        policyno}, this.isClaimOperationCompleted, userState);
        }
        
        private void OnisClaimOperationCompleted(object arg) {
            if ((this.isClaimCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isClaimCompleted(this, new isClaimCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/InspectService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InspectService([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Product, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string XML) {
            object[] results = this.Invoke("InspectService", new object[] {
                        Product,
                        XML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InspectServiceAsync(string Product, string XML) {
            this.InspectServiceAsync(Product, XML, null);
        }
        
        /// <remarks/>
        public void InspectServiceAsync(string Product, string XML, object userState) {
            if ((this.InspectServiceOperationCompleted == null)) {
                this.InspectServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInspectServiceOperationCompleted);
            }
            this.InvokeAsync("InspectService", new object[] {
                        Product,
                        XML}, this.InspectServiceOperationCompleted, userState);
        }
        
        private void OnInspectServiceOperationCompleted(object arg) {
            if ((this.InspectServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InspectServiceCompleted(this, new InspectServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/ClientEnq", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClientEnq([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("ClientEnq", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ClientEnqAsync(string xml) {
            this.ClientEnqAsync(xml, null);
        }
        
        /// <remarks/>
        public void ClientEnqAsync(string xml, object userState) {
            if ((this.ClientEnqOperationCompleted == null)) {
                this.ClientEnqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClientEnqOperationCompleted);
            }
            this.InvokeAsync("ClientEnq", new object[] {
                        xml}, this.ClientEnqOperationCompleted, userState);
        }
        
        private void OnClientEnqOperationCompleted(object arg) {
            if ((this.ClientEnqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClientEnqCompleted(this, new ClientEnqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/FetcheMandateDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet FetcheMandateDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PolicyNo) {
            object[] results = this.Invoke("FetcheMandateDetails", new object[] {
                        PolicyNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FetcheMandateDetailsAsync(string PolicyNo) {
            this.FetcheMandateDetailsAsync(PolicyNo, null);
        }
        
        /// <remarks/>
        public void FetcheMandateDetailsAsync(string PolicyNo, object userState) {
            if ((this.FetcheMandateDetailsOperationCompleted == null)) {
                this.FetcheMandateDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetcheMandateDetailsOperationCompleted);
            }
            this.InvokeAsync("FetcheMandateDetails", new object[] {
                        PolicyNo}, this.FetcheMandateDetailsOperationCompleted, userState);
        }
        
        private void OnFetcheMandateDetailsOperationCompleted(object arg) {
            if ((this.FetcheMandateDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetcheMandateDetailsCompleted(this, new FetcheMandateDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/Pos_MispMaster", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Pos_MispMaster([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("Pos_MispMaster", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Pos_MispMasterAsync(string xml) {
            this.Pos_MispMasterAsync(xml, null);
        }
        
        /// <remarks/>
        public void Pos_MispMasterAsync(string xml, object userState) {
            if ((this.Pos_MispMasterOperationCompleted == null)) {
                this.Pos_MispMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPos_MispMasterOperationCompleted);
            }
            this.InvokeAsync("Pos_MispMaster", new object[] {
                        xml}, this.Pos_MispMasterOperationCompleted, userState);
        }
        
        private void OnPos_MispMasterOperationCompleted(object arg) {
            if ((this.Pos_MispMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Pos_MispMasterCompleted(this, new Pos_MispMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/HealthRenewal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HealthRenewal([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            object[] results = this.Invoke("HealthRenewal", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HealthRenewalAsync(string xml) {
            this.HealthRenewalAsync(xml, null);
        }
        
        /// <remarks/>
        public void HealthRenewalAsync(string xml, object userState) {
            if ((this.HealthRenewalOperationCompleted == null)) {
                this.HealthRenewalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHealthRenewalOperationCompleted);
            }
            this.InvokeAsync("HealthRenewal", new object[] {
                        xml}, this.HealthRenewalOperationCompleted, userState);
        }
        
        private void OnHealthRenewalOperationCompleted(object arg) {
            if ((this.HealthRenewalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HealthRenewalCompleted(this, new HealthRenewalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/CheckDuplicateClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckDuplicateClient([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Product, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string XML) {
            object[] results = this.Invoke("CheckDuplicateClient", new object[] {
                        Product,
                        XML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDuplicateClientAsync(string Product, string XML) {
            this.CheckDuplicateClientAsync(Product, XML, null);
        }
        
        /// <remarks/>
        public void CheckDuplicateClientAsync(string Product, string XML, object userState) {
            if ((this.CheckDuplicateClientOperationCompleted == null)) {
                this.CheckDuplicateClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDuplicateClientOperationCompleted);
            }
            this.InvokeAsync("CheckDuplicateClient", new object[] {
                        Product,
                        XML}, this.CheckDuplicateClientOperationCompleted, userState);
        }
        
        private void OnCheckDuplicateClientOperationCompleted(object arg) {
            if ((this.CheckDuplicateClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDuplicateClientCompleted(this, new CheckDuplicateClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService/GetHBZone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetHBZone([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PinCode) {
            object[] results = this.Invoke("GetHBZone", new object[] {
                        PinCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHBZoneAsync(string PinCode) {
            this.GetHBZoneAsync(PinCode, null);
        }
        
        /// <remarks/>
        public void GetHBZoneAsync(string PinCode, object userState) {
            if ((this.GetHBZoneOperationCompleted == null)) {
                this.GetHBZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHBZoneOperationCompleted);
            }
            this.InvokeAsync("GetHBZone", new object[] {
                        PinCode}, this.GetHBZoneOperationCompleted, userState);
        }
        
        private void OnGetHBZoneOperationCompleted(object arg) {
            if ((this.GetHBZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHBZoneCompleted(this, new GetHBZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AgentEnqServiceCompletedEventHandler(object sender, AgentEnqServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgentEnqServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgentEnqServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreatePolicyCompletedEventHandler(object sender, CreatePolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateAndUpdateClientCompletedEventHandler(object sender, CreateAndUpdateClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAndUpdateClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAndUpdateClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreatePolicyWithPayerCompletedEventHandler(object sender, CreatePolicyWithPayerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePolicyWithPayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePolicyWithPayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateOnlyReceiptCompletedEventHandler(object sender, CreateOnlyReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOnlyReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOnlyReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RenewalCloningServiceCompletedEventHandler(object sender, RenewalCloningServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenewalCloningServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenewalCloningServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ClaimAndNCBCompletedEventHandler(object sender, ClaimAndNCBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClaimAndNCBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClaimAndNCBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FetchPinCodeCompletedEventHandler(object sender, FetchPinCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchPinCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchPinCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void isClaimCompletedEventHandler(object sender, isClaimCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isClaimCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isClaimCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InspectServiceCompletedEventHandler(object sender, InspectServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InspectServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InspectServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ClientEnqCompletedEventHandler(object sender, ClientEnqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClientEnqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClientEnqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void FetcheMandateDetailsCompletedEventHandler(object sender, FetcheMandateDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetcheMandateDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetcheMandateDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Pos_MispMasterCompletedEventHandler(object sender, Pos_MispMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Pos_MispMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Pos_MispMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void HealthRenewalCompletedEventHandler(object sender, HealthRenewalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HealthRenewalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HealthRenewalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckDuplicateClientCompletedEventHandler(object sender, CheckDuplicateClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDuplicateClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDuplicateClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetHBZoneCompletedEventHandler(object sender, GetHBZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHBZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHBZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591